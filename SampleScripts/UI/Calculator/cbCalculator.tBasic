  '---
  ' Version 1.0.0
  '---
  
  uses "UI"
  'uses "Console"

  '---Global variables declaration
  DIM hDlg      AS LONG
  DIM tmpStr    AS STRING
  DIM tmpRes    AS EXT
  
  DIM PostOperation AS LONG    '---Used to save operation
  DIM PrevVal       AS EXT     '---Used to save first operand
  DIM ClearNext     AS LONG    '---Used to understand if text box has to be deleted before posting new value
  DIM NextHasComma  AS LONG
  
  '---Equates (constants) used to identify Controls inside a dialog.
  '---Every control should have a unique id
  Begin ControlID
    %CtrlRes '---Result text box
    
    %CtrlN00 '--Button 0
    %CtrlN01 '--Button 1
    %CtrlN02 '--Button 2
    %CtrlN03 '--Button 3
    %CtrlN04 '--Button 4
    %CtrlN05 '--Button 5
    %CtrlN06 '--Button 6
    %CtrlN07 '--Button 7
    %CtrlN08 '--Button 8
    %CtrlN09 '--Button 9
    %CtrlPM  
    %CtrlCOM 
  
    %CtrlPlu '---
    %CtrlMin '---
    %CtrlMul '---
    %CtrlDiv '---
    %CtrlEqu '---
    %Ctrl1x  '---
    %CtrlPct '---
    %CtrlSqr '---
    
    %CtrlMC  '---
    %CtrlMR  '---
    %CtrlMS  '---
    %CtrlMP  '---
  
    %CtrlBac '---
    %CtrlCe  '---
    %Ctrlc   '---
  End ControlID
  
  '---Create a new dialog
  DIALOG NEW 0, "Calculator", -1, -1, 195, 180, _
                                                %WS_DLGFRAME OR %DS_CENTER OR %WS_CAPTION OR %WS_SYSMENU, _
                                                0 TO hDlg

  '---Start adding controls inside the dialog
  CONTROL ADD TEXTBOX , hDlg, %CtrlRes, "0",   5,  15, 185, 15, _
                                                %WS_BORDER OR %ES_RIGHT, _' OR %ES_READONLY, _
                                                %WS_EX_CLIENTEDGE     

  CONTROL ADD BUTTON  , hDlg, %CtrlBac,"Back",  45,  40,  45, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlCe ,  "CE",  95,  40,  45, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlC  ,   "C", 145,  40,  45, 20
   
  CONTROL ADD BUTTON  , hDlg, %CtrlMC ,  "MC",   5,  65,  25, 20, %WS_DISABLED    
  CONTROL ADD BUTTON  , hDlg, %CtrlN07,   "7",  45,  65,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlN08,   "8",  75,  65,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlN09,   "9", 105,  65,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlDiv,   "/", 135,  65,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlSqr,"&sqrt", 165,  65,  25, 20

  CONTROL ADD BUTTON  , hDlg, %CtrlMR ,  "MR",   5,  90,  25, 20, %WS_DISABLED    
  CONTROL ADD BUTTON  , hDlg, %CtrlN04,   "4",  45,  90,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlN05,   "5",  75,  90,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlN06,   "6", 105,  90,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlMul,   "*", 135,  90,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlPct,   "%", 165,  90,  25, 20
  
  CONTROL ADD BUTTON  , hDlg, %CtrlMS ,  "MS",   5, 115,  25, 20, %WS_DISABLED    
  CONTROL ADD BUTTON  , hDlg, %CtrlN01,   "1",  45, 115,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlN02,   "2",  75, 115,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlN03,   "3", 105, 115,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlMin,   "-", 135, 115,  25, 20
  CONTROL ADD BUTTON  , hDlg, %Ctrl1x , "1/x", 165, 115,  25, 20

  CONTROL ADD BUTTON  , hDlg, %CtrlMP ,  "M+",   5, 140,  25, 20, %WS_DISABLED    
  CONTROL ADD BUTTON  , hDlg, %CtrlN00,   "0",  45, 140,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlPM,  "+/-",  75, 140,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlCOM,   ",", 105, 140,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlPlu,   "+", 135, 140,  25, 20
  CONTROL ADD BUTTON  , hDlg, %CtrlEqu,   "=", 165, 140,  25, 20
  
  dialog set color hDlg, -1, rgb(200, 200, 200)
   
  '---Show dialog in MODELESS state, the only managed state at the moment
  DIALOG SHOW modal hDlg, call cbDialog
  

  '-------------------------------------------------------------
  callback function cbDialog() as long
  '-------------------------------------------------------------
  
        
    '---Now test the message
    SELECT CASE cbMsg
      CASE %WM_KEYUP
        '---In case of ESC exit loop
        IF cbwParam = 27 THEN dialog end cbhndl

      CASE %WM_KEYDOWN
        '---

      CASE %WM_COMMAND

        '---Test which control has been clicked
        SELECT CASE cbctl 

          '---A number was activated
          CASE %CtrlN00, %CtrlN01, %CtrlN02, %CtrlN03, %CtrlN04, %CtrlN05, %CtrlN06, %CtrlN07, %CtrlN08, %CtrlN09

            
            '---Just for fun and to test killing a control,
            '---if number was clicked and CTRL was down then delete the control
            IF GetAsyncKeyState(%VK_CONTROL) <> 0 then
              Control Kill CBHNDL, CBWPARAM
            ELSE
              
              Control Get Text CBHNDL, %CtrlRes To tmpStr
              IF ClearNext = %TRUE THEN
                ClearNext = %FALSE
                tmpStr = VAL(FORMAT$(cbwParam - %CtrlN00))
              ELSE                
                IF NextHasComma = %TRUE THEN
                  NextHasComma = %FALSE
                  tmpStr = VAL(VAL(tmpStr) & "." & FORMAT$(cbwParam - %CtrlN00))
                ELSE
                  tmpStr = VAL(VAL(tmpStr) & FORMAT$(cbwParam - %CtrlN00))
                END IF
              END IF
              CONTROL SET TEXT hDlg, %CtrlRes, tmpStr
            END IF

          '---An operation was activated
          CASE %CtrlPlu, %CtrlMin, %CtrlMul, %CtrlDiv
            PostOperation = cbwParam
            Control Get Text CBHNDL, %CtrlRes To tmpStr
            PrevVal = VAL(tmpStr)
            ClearNext = %TRUE

          '---Comma
          CASE %CtrlCOM
            IF NextHasComma = %TRUE THEN
              BEEP
            ELSE
              NextHasComma = %TRUE
            END IF
          
          '---Equal sign
          CASE %CtrlEqu
            IF PostOperation <> 0 THEN
              Control Get Text CBHNDL, %CtrlRes To tmpStr
              SELECT CASE PostOperation
                CASE %CtrlPlu
                  tmpStr = FORMAT$( VAL(PrevVal) + VAL(tmpStr) )
                CASE %CtrlMin
                  tmpStr = FORMAT$( VAL(PrevVal) - VAL(tmpStr) )
                CASE %CtrlMul
                  tmpStr = FORMAT$( VAL(PrevVal) * VAL(tmpStr) )
                CASE %CtrlDiv                       
                  IF VAL(tmpStr) <> 0 THEN
                    tmpStr = FORMAT$( VAL(PrevVal) / VAL(tmpStr) )
                  ELSE
                    BEEP
                    tmpStr = "Error: division by zero."
                    Control Set Color CBHNDL, %CtrlRes, Rgb(255,0,0), Rgb(0,0,0) 
                    Control Set Text CBHNDL, %CtrlRes, tmpStr
                    tmpStr = "0"
                    SLEEP 1500
                    Control Set Color CBHNDL, %CtrlRes, Rgb(0,0,0), Rgb(255,255,255) 
                  END IF
              END SELECT
              Control Set Text CBHNDL, %CtrlRes, tmpStr
              PostOperation = 0
              ClearNext = %TRUE
            END IF
          
          '---Change sign
          CASE %CtrlPM
            Control Get Text CBHNDL, %CtrlRes To tmpStr
            tmpStr = FORMAT$( -1 * VAL(tmpStr) )
            Control Set Text CBHNDL, %CtrlRes, tmpStr
            
          '---
          CASE %CtrlSqr
            Control Get Text CBHNDL, %CtrlRes To tmpStr
            tmpStr = FORMAT$( SQR(VAL(tmpStr)) )
            Control Set Text CBHNDL, %CtrlRes, tmpStr
            PostOperation = 0 
          
          '---
          CASE %Ctrl1x
            CONTROL GET TEXT CBHNDL, %CtrlRes TO tmpStr
            IF VAL(tmpStr) <> 0 THEN
              tmpStr = FORMAT$( 1/(VAL(tmpStr)) )
            ELSE  
              BEEP
              tmpStr = "Error: division by zero."
              CONTROL SET COLOR CBHNDL, %CtrlRes, RGB(255,0,0), RGB(0,0,0) 
              CONTROL SET TEXT CBHNDL, %CtrlRes, tmpStr
              tmpStr = "0"
              SLEEP 1500
              CONTROL SET COLOR CBHNDL, %CtrlRes, RGB(0,0,0), RGB(255,255,255) 
            END IF
            Control Set Text CBHNDL, %CtrlRes, tmpStr
            PostOperation = 0

          '---
          CASE %CtrlBac
            CONTROL GET TEXT CBHNDL, %CtrlRes TO tmpStr
            tmpStr = FORMAT$( VAL(LEFT$(tmpStr, -1) ) )
            CONTROL SET TEXT CBHNDL, %CtrlRes, tmpStr
          
          '---
          CASE %CtrlCe
            CONTROL SET TEXT CBHNDL, %CtrlRes, "0"

          '---
          CASE %CtrlC
            Control Set Text CBHNDL, %CtrlRes, "0"
            PostOperation = 0 
            PrevVal = 0
          CASE %CtrlRes

        END SELECT
        
      '---Some other notifications ...
      
      CASE %WM_NOTIFY
      CASE %WM_MOUSEMOVE
      CASE %WM_DESTROY
      CASE %WM_SIZE
      CASE %WM_MOVE
      CASE %WM_MOVING
      CASE %WM_SIZING
      CASE %WM_CAPTURECHANGED
      CASE %WM_QUIT
      CASE %WM_CLOSE
      CASE %WM_DESTROY

      CASE ELSE
        
    END SELECT
    
  END function
