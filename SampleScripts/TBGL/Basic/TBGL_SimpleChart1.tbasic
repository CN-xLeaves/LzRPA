  '=============================================================================
  '=                               Simple chart                                =
  '=                                    v1                                     =
  '=                                                                           =
  '=                           Petr Schreiber, 2007                            =
  '=============================================================================

  Uses "TBGL" 

  Dim hWnd As Dword 
  dim i, j as long


  %MYDATADIM1 = 4
  %MYDATADIM2 = 4
  dim ChartName as string = "My Chart"
  dim MyData(%MYDATADIM1, %MYDATADIM2) as single
  dim ChartMode as long = 1
  dim Response as string

    for i = 1 to %MYDATADIM1      
      for j = 1 to %MYDATADIM2
          MyData(i, j) = rnd(1,4)
      next  
    next  


  hWnd = TBGL_CreateWindowEx("Chart render - press [ESC] to quit", 640, 480, 32, %TBGL_WS_WINDOWED) 
  TBGL_ShowWindow 

  dim hFont as dword = tbgl_FontHandle("Arial Black", 12)
  TBGL_BuildFont hFont

  TBGL_LoadBMPFont App_Sourcepath+"Textures\tbgl_font.bmp"

  TBGL_ResetKeyState() ' Resets key status before keypress checking 

  tbgl_UseLightSource %GL_LIGHT0, %TRUE
  tbgl_SetLightparameter %GL_LIGHT0, %TBGL_LIGHT_POSITION, 2, 2, 2, 0
  tbgl_SetLightparameter %GL_LIGHT0, %TBGL_LIGHT_DIFFUSE , 1, 1, 1, 0

  While tbgl_IsWindow(hWnd) 

    tbgl_ClearFrame 
    
    tbgl_Camera %MYDATADIM1*3,(%MYDATADIM1+%MYDATADIM2)*3,%MYDATADIM2*3,0,0,0      
    if ChartMode = 1 then tbgl_Rotate GetTickCount/25,0,1,0

    tbgl_UseLighting %TRUE 

    RenderGraph
   
    TBGL_ResetMatrix
    TBGL_Color 255,255,255              ' Defines color  
    tbgl_UseLighting %FALSE   
    tbgl_UseBlend %TRUE
    TBGL_PrintBMP ChartName, (40-len(ChartName))/2,1
    TBGL_PrintBMP "Press [M] to toggle mode", 1, 24
    TBGL_PrintBMP "Current mode is "+IIF$(ChartMode = 0, "<User input>", "<Mad chart>"), 1,25  
    if ChartMode = 0 then TBGL_PrintBMP "Press F1 to change values", 1,26
    tbgl_UseBlend %FALSE
    
    tbgl_DrawFrame 
   
  '  MyData(rnd(1, %MYDATADIM1), rnd(1, %MYDATADIM2)) += sin(GetTickCount/10) /10
    
    If tbgl_GetWindowKeyState( hWnd, %VK_ESCAPE) Then Exit While 
    
    if tbgl_GetWindowKeyState( hWnd, %VK_M) Then 
      ChartMode = ChartMode xor 1
      sleep 100
    end if  
    
    if ChartMode = 0 then ' If mode is "<User input>"
      If tbgl_GetWindowKeyState( hWnd, %VK_F1) Then
        Response = INPUTBOX$("Which value would you like to change?"+$CRLF+$CRLF+"For example "+$DQ+"1,1"+$DQ, "Change value","1,1")
        i = val(parse$(Response, ",", 1))
        j = val(parse$(Response, ",", 2))
        
        if i < 1  or j < 1 then 
          MsgBox hWnd, "You cannot use negative indexes",0,"Incorrect input"      
        elseif i > %MYDATADIM1 then 
          MsgBox hWnd, "First index cannot exceed"+STR$(%MYDATADIM1),0,"Incorrect input"
        elseif j > %MYDATADIM2 then 
          MsgBox hWnd, "Second index cannot exceed"+STR$(%MYDATADIM2),0,"Incorrect input"    
        else  
          Response = INPUTBOX$("Enter new positive value", "Change value",FORMAT$(MyData(i,j)))      
          
          if val(Response) < 1 then
            MsgBox hWnd, "You cannot enter negative or zero values",0,"Incorrect input"       
          else
            MyData(i,j) = val(Response)
          end if   
        end if  
      end if 
    end if
    
  Wend 

  TBGL_KillFont
  TBGL_DestroyWindow 


  function RenderGraph() as long

    tbgl_PushMatrix
    
    tbgl_Translate -%MYDATADIM1,0,%MYDATADIM2
    
    for i = 1 to %MYDATADIM1
      for j = 1 to %MYDATADIM2
         
      if ChartMode = 1 then ' If mode is "<Mad chart>"   
        ' Generation of new data  
        MyData(i, j) += sin((GetTickCount)/(i*j*20))/10    
        if MyData(i, j) < 0 then MyData(i, j) = 0
      end if
      
      tbgl_Color 255-j*(255/%MYDATADIM2),i*(255/%MYDATADIM1),0
      
        tbgl_PushMatrix
          tbgl_Translate i*2,MyData(i, j)/2,-j*2

          tbgl_Box 1,MyData(i, j),1

         tbgl_Translate 0,MyData(i, j)/2+0.5,0
          tbgl_Color 255,255,255
          tbgl_UseLighting %FALSE
          tbgl_PrintFont format$(MyData(i, j), "##0"),0,0,0
          tbgl_UseLighting %TRUE        
        tbgl_PopMatrix
      next  
    next  
    
    tbgl_PopMatrix
    
  end function





