'------------------------------------------------------------------------------
'
'  PrSht.inc -- Interface for the Windows Property Sheet Pages
'
'  Copyright (c) 2002-2011 PowerBASIC, Inc.
'  Portions Copyright (c) Microsoft Corporation
'  All Rights Reserved.
'
'  Last updated 02 May 2011
'
'------------------------------------------------------------------------------
'  from PrSht.h version 1.0 dated 14 Jul 2009
'------------------------------------------------------------------------------


#INCLUDE THIS ONCE

%PRSHT_INC = 1

#INCLUDE "SdkDdkVer.inc"
#INCLUDE "WinUser.inc"


%MAXPROPPAGES = 100

' [these need to go much later, after the UDTs have been defined]
'DECLARE FUNCTION LPFNPSPCALLBACKA (BYVAL hWnd AS DWORD, BYVAL uMsg AS DWORD, _
'    ppsp AS PROPSHEETPAGEA) AS DWORD
'
'DECLARE FUNCTION LPFNPSPCALLBACKW (BYVAL hWnd AS DWORD, BYVAL uMsg AS DWORD, _
'    ppsp AS PROPSHEETPAGEW) AS DWORD
'
'#IF %DEF(%UNICODE)
'MACRO LPFNPSPCALLBACK=LPFNPSCALLBACKW
'#ELSE
'MACRO LPFNPSPCALLBACK=LPFNPSCALLBACKA
'#ENDIF

%PSP_DEFAULT             = &H00000000
%PSP_DLGINDIRECT         = &H00000001
%PSP_USEHICON            = &H00000002
%PSP_USEICONID           = &H00000004
%PSP_USETITLE            = &H00000008
%PSP_RTLREADING          = &H00000010

%PSP_HASHELP             = &H00000020
%PSP_USEREFPARENT        = &H00000040
%PSP_USECALLBACK         = &H00000080
%PSP_PREMATURE           = &H00000400

#IF (%WIN32_IE >= &H0400)
'----- New flags for wizard97 --------------
%PSP_HIDEHEADER          = &H00000800
%PSP_USEHEADERTITLE      = &H00001000
%PSP_USEHEADERSUBTITLE   = &H00002000
'-------------------------------------------
#ENDIF
#IF (%WIN32_WINNT >= &H0501 OR %ISOLATION_AWARE_ENABLED)
%PSP_USEFUSIONCONTEXT    = &H00004000
#ENDIF

#IF (%WIN32_IE >= &H0500)
%PSPCB_ADDREF  = 0
#ENDIF
%PSPCB_RELEASE = 1
%PSPCB_CREATE  = 2

UNION PROPSHEETPAGEA_union1
    pszTemplate AS ASCIIZ PTR
    pResource   AS DLGTEMPLATE PTR
END UNION

UNION PROPSHEETPAGEA_union2
    hIcon       AS DWORD
    pszIcon     AS ASCIIZ PTR
END UNION

TYPE PROPSHEETPAGEA_V1_FIELDS
    dwSize      AS DWORD
    dwFlags     AS DWORD
    hInstance   AS DWORD
    PROPSHEETPAGEA_union1
    PROPSHEETPAGEA_union2
    pszTitle    AS ASCIIZ PTR
    pfnDlgProc  AS DWORD
    lParam      AS LONG
    pfnCallback AS DWORD
    pcRefParent AS DWORD PTR
END TYPE

UNION PROPSHEETPAGEW_union1
    pszTemplate AS WSTRINGZ PTR
    pResource   AS DLGTEMPLATE PTR
END UNION

UNION PROPSHEETPAGEW_union2
    hIcon       AS DWORD
    pszIcon     AS WSTRINGZ PTR
END UNION

TYPE PROPSHEETPAGEW_V1_FIELDS
    dwSize      AS DWORD
    dwFlags     AS DWORD
    hInstance   AS DWORD
    PROPSHEETPAGEW_union1
    PROPSHEETPAGEW_union2
    pszTitle    AS WSTRINGZ PTR
    pfnDlgProc  AS DWORD
    lParam      AS LONG
    pfnCallback AS DWORD
    pcRefParent AS DWORD PTR
END TYPE

TYPE PROPSHEETPAGEA_V1
    PROPSHEETPAGEA_V1_FIELDS
END TYPE

TYPE PROPSHEETPAGEA_V2
    PROPSHEETPAGEA_V1_FIELDS
    pszHeaderTitle    AS ASCIIZ PTR    ' this is displayed in the header
    pszHeaderSubTitle AS ASCIIZ PTR
END TYPE

TYPE PROPSHEETPAGEA_V3
    PROPSHEETPAGEA_V1_FIELDS

    pszHeaderTitle    AS ASCIIZ PTR    ' this is displayed in the header
    pszHeaderSubTitle AS ASCIIZ PTR

    hActCtx           AS DWORD
END TYPE

#IF %WIN32_WINNT >= &H0600

UNION PROPSHEETPAGEA_V4_union
    hbmHeader   AS DWORD
    pszbmHeader AS ASCIIZ PTR
END UNION

TYPE PROPSHEETPAGEA_V4
    PROPSHEETPAGEA_V1_FIELDS

    pszHeaderTitle    AS ASCIIZ PTR    ' this is displayed in the header
    pszHeaderSubTitle AS ASCIIZ PTR

    hActCtx           AS DWORD

    PROPSHEETPAGEA_V4_union
END TYPE

#ENDIF

TYPE PROPSHEETPAGEW_V1
    PROPSHEETPAGEW_V1_FIELDS
END TYPE

TYPE PROPSHEETPAGEW_V2
    PROPSHEETPAGEW_V1_FIELDS

    pszHeaderTitle    AS WSTRINGZ PTR    ' this is displayed in the header
    pszHeaderSubTitle AS WSTRINGZ PTR
END TYPE

TYPE PROPSHEETPAGEW_V3
    PROPSHEETPAGEW_V1_FIELDS

    pszHeaderTitle    AS WSTRINGZ PTR    ' this is displayed in the header
    pszHeaderSubTitle AS WSTRINGZ PTR

    hActCtx           AS DWORD
END TYPE

#IF %WIN32_WINNT >= &H0600

UNION PROPSHEETPAGEW_V4_union
    hbmHeader   AS DWORD
    pszbmHeader AS WSTRINGZ PTR
END UNION

TYPE PROPSHEETPAGEW_V4
    PROPSHEETPAGEW_V1_FIELDS

    pszHeaderTitle    AS WSTRINGZ PTR    ' this is displayed in the header
    pszHeaderSubTitle AS WSTRINGZ PTR

    hActCtx           AS DWORD

    PROPSHEETPAGEW_V4_union
END TYPE

#ENDIF

MACRO PROPSHEETPAGEA_V1_SIZE=SIZEOF(PROPSHEETPAGEA_V1)
MACRO PROPSHEETPAGEW_V1_SIZE=SIZEOF(PROPSHEETPAGEW_V1)
MACRO PROPSHEETPAGEA_V2_SIZE=SIZEOF(PROPSHEETPAGEA_V2)
MACRO PROPSHEETPAGEW_V2_SIZE=SIZEOF(PROPSHEETPAGEW_V2)
MACRO PROPSHEETPAGEA_V3_SIZE=SIZEOF(PROPSHEETPAGEA_V3)
MACRO PROPSHEETPAGEW_V3_SIZE=SIZEOF(PROPSHEETPAGEW_V3)

#IF %WIN32_WINNT >= &H0600

MACRO PROPSHEETPAGEA_V4_SIZE=SIZEOF(PROPSHEETPAGEA_V4)
MACRO PROPSHEETPAGEW_V4_SIZE=SIZEOF(PROPSHEETPAGEW_V4)

#ENDIF


#IF %WIN32_WINNT >= &H0600
TYPE PROPSHEETPAGEA_LATEST
    PROPSHEETPAGEA_V4
END TYPE
TYPE PROPSHEETPAGEW_LATEST
    PROPSHEETPAGEW_V4
END TYPE
#ELSE
TYPE PROPSHEETPAGEA_LATEST
    PROPSHEETPAGEA_V3
END TYPE
TYPE PROPSHEETPAGEW_LATEST
    PROPSHEETPAGEW_V3
END TYPE
#ENDIF


#IF %WIN32_WINNT >= &H0600
TYPE PROPSHEETPAGEA
    PROPSHEETPAGEA_V4
END TYPE
TYPE PROPSHEETPAGEW
    PROPSHEETPAGEW_V4
END TYPE
#ELSEIF (%WIN32_WINNT >= &H0501) OR %ISOLATION_AWARE_ENABLED
TYPE PROPSHEETPAGEA
    PROPSHEETPAGEA_V3
END TYPE
TYPE PROPSHEETPAGEW
    PROPSHEETPAGEW_V3
END TYPE
#ELSEIF (%WIN32_IE >= &H0400)
TYPE PROPSHEETPAGEA
    PROPSHEETPAGEA_V2
END TYPE
TYPE PROPSHEETPAGEW
    PROPSHEETPAGEW_V2
END TYPE
#ELSE
TYPE PROPSHEETPAGEA
    PROPSHEETPAGEA_V1
END TYPE
TYPE PROPSHEETPAGEW
    PROPSHEETPAGEW_V1
END TYPE
#ENDIF

#IF %DEF(%UNICODE)
TYPE PROPSHEETPAGE
    PROPSHEETPAGEW
END TYPE
MACRO PROPSHEETPAGE_V1_SIZE = PROPSHEETPAGEW_V1_SIZE
MACRO PROPSHEETPAGE_V2_SIZE = PROPSHEETPAGEW_V2_SIZE
TYPE PROPSHEETPAGE_V1
    PROPSHEETPAGEW_V1
END TYPE
TYPE PROPSHEETPAGE_V2
    PROPSHEETPAGEW_V2
END TYPE
TYPE PROPSHEETPAGE_V3
    PROPSHEETPAGEW_V3
END TYPE
#IF %WIN32_WINNT >= &H0600
TYPE PROPSHEETPAGE_V4
    PROPSHEETPAGEW_V4
END TYPE
#ENDIF
TYPE PROPSHEETPAGE_LATEST
    PROPSHEETPAGEW_LATEST
END TYPE
#ELSE
TYPE PROPSHEETPAGE
    PROPSHEETPAGEA
END TYPE
MACRO PROPSHEETPAGE_V1_SIZE = PROPSHEETPAGEA_V1_SIZE
MACRO PROPSHEETPAGE_V2_SIZE = PROPSHEETPAGEA_V2_SIZE
TYPE PROPSHEETPAGE_V1
    PROPSHEETPAGEA_V1
END TYPE
TYPE PROPSHEETPAGE_V2
    PROPSHEETPAGEA_V2
END TYPE
TYPE PROPSHEETPAGE_V3
    PROPSHEETPAGEA_V3
END TYPE
#IF %WIN32_WINNT >= &H0600
TYPE PROPSHEETPAGE_V4
    PROPSHEETPAGEA_V4
END TYPE
#ENDIF
TYPE PROPSHEETPAGE_LATEST
    PROPSHEETPAGEA_LATEST
END TYPE
#ENDIF

'DECLARE FUNCTION LPFNPSPCALLBACKA (BYVAL hWnd AS DWORD, BYVAL uMsg AS DWORD, _
'    ppsp AS PROPSHEETPAGEA) AS DWORD
'
'DECLARE FUNCTION LPFNPSPCALLBACKW (BYVAL hWnd AS DWORD, BYVAL uMsg AS DWORD, _
'    ppsp AS PROPSHEETPAGEW) AS DWORD


'----- PropSheet Header related ---------


%PSH_DEFAULT            = &H00000000
%PSH_PROPTITLE          = &H00000001
%PSH_USEHICON           = &H00000002
%PSH_USEICONID          = &H00000004
%PSH_PROPSHEETPAGE      = &H00000008

%PSH_WIZARDHASFINISH    = &H00000010
%PSH_WIZARD             = &H00000020
%PSH_USEPSTARTPAGE      = &H00000040
%PSH_NOAPPLYNOW         = &H00000080

%PSH_USECALLBACK        = &H00000100
%PSH_HASHELP            = &H00000200
%PSH_MODELESS           = &H00000400
%PSH_RTLREADING         = &H00000800

%PSH_WIZARDCONTEXTHELP  = &H00001000

#IF %WIN32_IE >= &H0400
'----- New flags for wizard97 -----------
#IF (%WIN32_IE < &H0500)
%PSH_WIZARD97          = &H00002000
#ELSE
%PSH_WIZARD97          = &H01000000
#ENDIF
' &H00004000 was not used by any previous release
%PSH_WATERMARK         = &H00008000
%PSH_USEHBMWATERMARK   = &H00010000  ' user pass in a hbmWatermark instead of pszbmWatermark
%PSH_USEHPLWATERMARK   = &H00020000  '
%PSH_STRETCHWATERMARK  = &H00040000  ' stretchwatermark also applies for the header
%PSH_HEADER            = &H00080000
%PSH_USEHBMHEADER      = &H00100000
%PSH_USEPAGELANG       = &H00200000  ' use frame dialog template matched to page
'----------------------------------------
#ENDIF

#IF %WIN32_IE >= &H0500
'----- New flags for wizard-lite --------
%PSH_WIZARD_LITE       = &H00400000
%PSH_NOCONTEXTHELP     = &H02000000
'----------------------------------------
#ENDIF

#IF %WIN32_WINNT >= &H0600
%PSH_AEROWIZARD        = &H00004000

%PSH_RESIZABLE         = &H04000000
%PSH_HEADERBITMAP      = &H08000000
%PSH_NOMARGIN          = &H10000000
#ENDIF



DECLARE FUNCTION PFNPROPSHEETCALLBACK (BYVAL hwnd AS DWORD, _
    BYVAL ui AS DWORD, BYVAL lp AS LONG) AS LONG

UNION PROPSHEETHEADERA_V1_FIELDS_union1
    hIcon   AS DWORD
    pszIcon AS ASCIIZ PTR
END UNION

UNION PROPSHEETHEADERA_V1_FIELDS_union2
    nStartPage AS DWORD
    pStartPage AS ASCIIZ PTR
END UNION

UNION PROPSHEETHEADERA_V1_FIELDS_union3
    ppsp   AS PROPSHEETPAGEA PTR
    phpage AS DWORD
END UNION

TYPE PROPSHEETHEADERA_V1_FIELDS
    dwSize       AS DWORD
    dwFlags      AS DWORD
    hwndParent   AS DWORD
    hInstance    AS DWORD
    PROPSHEETHEADERA_V1_FIELDS_union1
    pszCaption   AS ASCIIZ PTR
    nPages       AS DWORD
    PROPSHEETHEADERA_V1_FIELDS_union2
    PROPSHEETHEADERA_V1_FIELDS_union3
    pfnCallback  AS DWORD  ' PFNPROPSHEETCALLBACK
END TYPE

TYPE PROPSHEETHEADERA_V1
    PROPSHEETHEADERA_V1_FIELDS
END TYPE

#IF (%WIN32_IE >= &H0400)

UNION PROPSHEETHEADERA_V2_union1
    hbmWatermark   AS DWORD
    pszbmWatermark AS ASCIIZ PTR
END UNION

UNION PROPSHEETHEADERA_V2_union2
    hbmHeader   AS DWORD     ' Header  bitmap shares the palette with watermark
    pszbmHeader AS ASCIIZ PTR
END UNION

TYPE PROPSHEETHEADERA_V2
    PROPSHEETHEADERA_V1_FIELDS
    PROPSHEETHEADERA_V2_union1
    hplWatermark AS DWORD
    PROPSHEETHEADERA_V2_union2
END TYPE

#ENDIF

UNION PROPSHEETHEADERW_V1_FIELDS_union1
    hIcon   AS DWORD
    pszIcon AS WSTRINGZ PTR
END UNION

UNION PROPSHEETHEADERW_V1_FIELDS_union2
    nStartPage AS DWORD
    pStartPage AS WSTRINGZ PTR
END UNION

UNION PROPSHEETHEADERW_V1_FIELDS_union3
    ppsp   AS PROPSHEETPAGEW PTR
    phpage AS DWORD PTR
END UNION

TYPE PROPSHEETHEADERW_V1_FIELDS
    dwSize      AS DWORD
    dwFlags     AS DWORD
    hwndParent  AS DWORD
    hInstance   AS DWORD
    PROPSHEETHEADERW_V1_FIELDS_union1
    pszCaption  AS WSTRINGZ PTR
    nPages      AS DWORD
    PROPSHEETHEADERW_V1_FIELDS_union2
    PROPSHEETHEADERW_V1_FIELDS_union3
    pfnCallback AS DWORD  ' PFNPROPSHEETCALLBACK
END TYPE

TYPE PROPSHEETHEADERW_V1
    PROPSHEETHEADERW_V1_FIELDS
END TYPE

#IF (%WIN32_IE >= &H0400)

UNION PROPSHEETHEADERW_V2_union1
    hbmWatermark   AS DWORD
    pszbmWatermark AS WSTRINGZ PTR
END UNION

UNION PROPSHEETHEADERW_V2_union2
    hbmHeader   AS DWORD    ' Header  bitmap shares the palette with watermark
    pszbmHeader AS WSTRINGZ PTR
END UNION

TYPE PROPSHEETHEADERW_V2
    PROPSHEETHEADERW_V1_FIELDS
    PROPSHEETHEADERW_V2_union1
    hplWatermark AS DWORD
    PROPSHEETHEADERW_V2_union2
END TYPE

#ENDIF

MACRO PROPSHEETHEADERA_V1_SIZE = SIZEOF(PROPSHEETHEADERA_V1)
MACRO PROPSHEETHEADERW_V1_SIZE = SIZEOF(PROPSHEETHEADERW_V1)

#IF (%WIN32_IE >= &H400)

MACRO PROPSHEETHEADERA_V2_SIZE = SIZEOF(PROPSHEETHEADERA_V2)
MACRO PROPSHEETHEADERW_V2_SIZE = SIZEOF(PROPSHEETHEADERW_V2)

#ENDIF

#IF (%WIN32_IE >= &H400)
TYPE PROPSHEETHEADERA
    PROPSHEETHEADERA_V2
END TYPE
TYPE PROPSHEETHEADERW
    PROPSHEETHEADERW_V2
END TYPE
#ELSE
TYPE PROPSHEETHEADERA
    PROPSHEETHEADERA_V1
END TYPE
TYPE PROPSHEETHEADERW
    PROPSHEETHEADERW_V1
END TYPE
#ENDIF


#IF %DEF(%UNICODE)
TYPE PROPSHEETHEADER
    PROPSHEETHEADERW
END TYPE
MACRO PROPSHEETHEADER_V1_SIZE = %PROPSHEETHEADERW_V1_SIZE
#IF (%WIN32_IE >= &H400)
MACRO PROPSHEETHEADER_V2_SIZE = %PROPSHEETHEADERW_V2_SIZE
#ENDIF
#ELSE
TYPE PROPSHEETHEADER
    PROPSHEETHEADERA
END TYPE
MACRO PROPSHEETHEADER_V1_SIZE = PROPSHEETHEADERA_V1_SIZE
#IF (%WIN32_IE >= &H400)
MACRO PROPSHEETHEADER_V2_SIZE = PROPSHEETHEADERA_V2_SIZE
#ENDIF
#ENDIF



%PSCB_INITIALIZED = 1
%PSCB_PRECREATE   = 2

#IF (%WIN32_IE >= &H560)
' PSCB_BUTTONPRESSED will be sent when the user clicks a button in the
' property dialog (OK, Cancel, Apply, or Close).  The message will be sent
' to PROPSHEETHEADER's pfnCallback if the PSH_USECALLBACK flag was specified.
' The LPARAM will be equal to one of the following based on the button pressed:
' This message is only supported on comctl32 v6.
' PSBTN_FINISH (Close), PSBTN_OK, PSBTN_APPLYNOW, or PSBTN_CANCEL

%PSCB_BUTTONPRESSED = 3
#ENDIF  ' %WIN32_IE >= &H560


DECLARE FUNCTION CreatePropertySheetPageA LIB "COMCTL32.DLL" _
    ALIAS "CreatePropertySheetPageA" (lppsp AS PROPSHEETPAGEA) AS DWORD

DECLARE FUNCTION CreatePropertySheetPageW LIB "COMCTL32.DLL" _
    ALIAS "CreatePropertySheetPageW" (lppsp AS PROPSHEETPAGEW) AS DWORD

DECLARE FUNCTION DestroyPropertySheetPage LIB "COMCTL32.DLL" _
    ALIAS "DestroyPropertySheetPage" (BYVAL hPSPage AS DWORD) AS LONG

DECLARE FUNCTION PropertySheetA LIB "COMCTL32.DLL" ALIAS "PropertySheetA" _
    (pshead AS PROPSHEETHEADERA) AS LONG

DECLARE FUNCTION PropertySheetW LIB "COMCTL32.DLL" ALIAS "PropertySheetW" _
    (pshead AS PROPSHEETHEADERW) AS LONG

#IF %DEF(%UNICODE)
DECLARE FUNCTION CreatePropertySheetPage LIB "COMCTL32.DLL" _
    ALIAS "CreatePropertySheetPageW" (lppsp AS PROPSHEETPAGEW) AS DWORD
DECLARE FUNCTION PropertySheet LIB "COMCTL32.DLL" ALIAS "PropertySheetW" _
    (pshead AS PROPSHEETHEADERW) AS LONG
#ELSE
DECLARE FUNCTION CreatePropertySheetPage LIB "COMCTL32.DLL" _
    ALIAS "CreatePropertySheetPageA" (lppsp AS PROPSHEETPAGEA) AS DWORD
DECLARE FUNCTION PropertySheet LIB "COMCTL32.DLL" ALIAS "PropertySheetA" _
    (pshead AS PROPSHEETHEADERA) AS LONG
#ENDIF


DECLARE FUNCTION LPFNADDPROPSHEETPAGE (BYVAL hpsp AS DWORD, BYVAL lp AS LONG) _
    AS LONG

DECLARE FUNCTION LPFNADDPROPSHEETPAGES (lpv AS ANY, BYVAL fnapsp AS DWORD, _
    BYVAL lp AS LONG) AS LONG


TYPE PSHNOTIFY
    hdr    AS NMHDR
    lParam AS LONG
END TYPE

%PSN_FIRST                = -200&
%PSN_LAST                 = -299&


%PSN_SETACTIVE            = %PSN_FIRST - 0
%PSN_KILLACTIVE           = %PSN_FIRST - 1
' %PSN_VALIDATE           = %PSN_FIRST - 1
%PSN_APPLY                = %PSN_FIRST - 2
%PSN_RESET                = %PSN_FIRST - 3
' %PSN_CANCEL             = %PSN_FIRST - 3
%PSN_HELP                 = %PSN_FIRST - 5
%PSN_WIZBACK              = %PSN_FIRST - 6
%PSN_WIZNEXT              = %PSN_FIRST - 7
%PSN_WIZFINISH            = %PSN_FIRST - 8
%PSN_QUERYCANCEL          = %PSN_FIRST - 9
#IF (%WIN32_IE >= &H0400)
%PSN_GETOBJECT            = %PSN_FIRST - 10
#ENDIF ' &H0400
#IF (%WIN32_IE >= &H0500)
%PSN_TRANSLATEACCELERATOR = %PSN_FIRST - 12
%PSN_QUERYINITIALFOCUS    = %PSN_FIRST - 13
#ENDIF ' &H0500

%PSNRET_NOERROR              = 0
%PSNRET_INVALID              = 1
%PSNRET_INVALID_NOCHANGEPAGE = 2
%PSNRET_MESSAGEHANDLED       = 3

%PSM_SETCURSEL = %WM_USER + 101

FUNCTION PropSheet_SetCurSel (BYVAL hDlg AS DWORD, BYVAL hpage AS DWORD, BYVAL iindex AS LONG) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_SETCURSEL, iindex,  hpage)
END FUNCTION

%PSM_REMOVEPAGE = %WM_USER + 102

SUB PropSheet_RemovePage (BYVAL hDlg AS DWORD, BYVAL iindex AS LONG, BYVAL hpage AS DWORD)
    SendMessage hDlg, %PSM_REMOVEPAGE, iindex, hpage
END SUB

%PSM_ADDPAGE = %WM_USER + 103

FUNCTION PropSheet_AddPage (BYVAL hDlg AS DWORD, BYVAL hpage AS DWORD) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_ADDPAGE, 0, hpage)
END FUNCTION

%PSM_CHANGED = %WM_USER + 104

FUNCTION PropSheet_Changed (BYVAL hDlg AS DWORD, BYVAL hwnd AS DWORD) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_CHANGED, hwnd, 0)
END FUNCTION

%PSM_RESTARTWINDOWS = %WM_USER + 105

SUB PropSheet_RestartWindows (BYVAL hDlg AS DWORD)
    SendMessage hDlg, %PSM_RESTARTWINDOWS, 0, 0
END SUB

%PSM_REBOOTSYSTEM = %WM_USER + 106

SUB PropSheet_RebootSystem (BYVAL hDlg AS DWORD)
    SendMessage hDlg, %PSM_REBOOTSYSTEM, 0, 0
END SUB

%PSM_CANCELTOCLOSE = %WM_USER + 107

SUB PropSheet_CancelToClose (BYVAL hDlg AS DWORD)
    PostMessage hDlg, %PSM_CANCELTOCLOSE, 0, 0
END SUB

%PSM_QUERYSIBLINGS = %WM_USER + 108

FUNCTION PropSheet_QuerySiblings (BYVAL hDlg AS DWORD, BYVAL wParam AS LONG, BYVAL lParam AS LONG) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_QUERYSIBLINGS, wParam, lParam)
END FUNCTION

%PSM_UNCHANGED = %WM_USER + 109

SUB PropSheet_UnChanged (BYVAL hDlg AS DWORD, BYVAL hwndPage AS DWORD)
    SendMessage hDlg, %PSM_UNCHANGED, hwndPage, 0
END SUB

%PSM_APPLY = %WM_USER + 110

FUNCTION PropSheet_Apply (BYVAL hDlg AS LONG) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_APPLY, 0, 0)
END FUNCTION

%PSM_SETTITLEA = %WM_USER + 111
%PSM_SETTITLEW = %WM_USER + 120

#IF %DEF(%UNICODE)
%PSM_SETTITLE  = %PSM_SETTITLEW
#ELSE
%PSM_SETTITLE  = %PSM_SETTITLEA
#ENDIF


SUB PropSheet_SetTitle (BYVAL hDlg AS DWORD, BYVAL dwStyle AS DWORD, BYVAL lpszText AS DWORD)
    ' lpszText may be an ASCIIZ PTR or a string resource number
    SendMessage hDlg, %PSM_SETTITLE, dwStyle, lpszText
END SUB

%PSM_SETWIZBUTTONS = %WM_USER + 112

SUB PropSheet_SetWizButtons (BYVAL hDlg AS DWORD, BYVAL dwFlags AS DWORD)
    PostMessage hDlg, %PSM_SETWIZBUTTONS, 0, dwFlags
END SUB


%PSWIZB_BACK           = &H00000001
%PSWIZB_NEXT           = &H00000002
%PSWIZB_FINISH         = &H00000004
%PSWIZB_DISABLEDFINISH = &H00000008

%PSWIZBF_ELEVATIONREQUIRED  = &H00000001

#IF %WIN32_WINNT >= &H0600
' Only for PSH_AEROWIZARD - used in PSM_SHOWWIZBUTTONS
%PSWIZB_CANCEL          = &H00000010
#ENDIF '= &H0605

%PSM_PRESSBUTTON = %WM_USER + 113

' [Microsoft shows this as returning a BOOL, but it doesn't.]
SUB PropSheet_PressButton (BYVAL hDlg AS DWORD, BYVAL iButton AS LONG)
    PostMessage hDlg, %PSM_PRESSBUTTON, iButton, 0
END SUB

%PSBTN_BACK     = 0
%PSBTN_NEXT     = 1
%PSBTN_FINISH   = 2
%PSBTN_OK       = 3
%PSBTN_APPLYNOW = 4
%PSBTN_CANCEL   = 5
%PSBTN_HELP     = 6
%PSBTN_MAX      = 6

%PSM_SETCURSELID = %WM_USER + 114

FUNCTION PropSheet_SetCurSelByID (BYVAL hDlg AS DWORD, BYVAL id AS LONG) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_SETCURSELID, 0, id)
END FUNCTION

%PSM_SETFINISHTEXTA = %WM_USER + 115
%PSM_SETFINISHTEXTW = %WM_USER + 121

#IF %DEF(%UNICODE)
%PSM_SETFINISHTEXT  = %PSM_SETFINISHTEXTW
#ELSE
%PSM_SETFINISHTEXT  = %PSM_SETFINISHTEXTA
#ENDIF

SUB PropSheet_SetFinishText (BYVAL hDlg AS DWORD, lpszText AS ASCIIZ)
    SendMessage hDlg, %PSM_SETFINISHTEXT, 0, BYVAL VARPTR(lpszText)
END SUB

%PSM_GETTABCONTROL = %WM_USER + 116

FUNCTION PropSheet_GetTabControl (BYVAL hDlg AS DWORD) AS DWORD
    FUNCTION = SendMessage(hDlg, %PSM_GETTABCONTROL, 0, 0)
END FUNCTION

%PSM_ISDIALOGMESSAGE = %WM_USER + 117

FUNCTION PropSheet_IsDialogMessage (BYVAL hDlg AS DWORD, pMsg AS tagMSG) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_ISDIALOGMESSAGE, 0, BYVAL VARPTR(pMsg))
END FUNCTION

%PSM_GETCURRENTPAGEHWND = %WM_USER + 118

FUNCTION PropSheet_GetCurrentPageHwnd (BYVAL hDlg AS DWORD) AS DWORD
    FUNCTION = SendMessage(hDlg, %PSM_GETCURRENTPAGEHWND, 0, 0)
END FUNCTION

%PSM_INSERTPAGE = %WM_USER + 119

FUNCTION PropSheet_InsertPage (BYVAL hDlg AS DWORD, BYVAL iindex AS LONG, BYVAL hpage AS DWORD) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_INSERTPAGE, iindex, hpage)
END FUNCTION

#IF %WIN32_WINNT >= &H0600
' Only for PSH_AEROWIZARD - used in PSM_SETHEADERTITLE
%PSWIZF_SETCOLOR      = &HFFFFFFFF???   ' ((DWORD)(-1))
#ENDIF

#IF (%WIN32_IE >= &H0500)
%PSM_SETHEADERTITLEA  =  %WM_USER + 125
%PSM_SETHEADERTITLEW  =  %WM_USER + 126

#IF %DEF(%UNICODE)
%PSM_SETHEADERTITLE   = %PSM_SETHEADERTITLEW
#ELSE
%PSM_SETHEADERTITLE   = %PSM_SETHEADERTITLEA
#ENDIF

SUB PropSheet_SetHeaderTitle (BYVAL hDlg AS DWORD, BYVAL iindex AS LONG, lpszText AS ASCIIZ)
    ' Microsoft shows this returning an "int", but it doesn't.
    SendMessage hDlg, %PSM_SETHEADERTITLE, iindex, BYVAL VARPTR(lpszText)
END SUB

%PSM_SETHEADERSUBTITLEA = %WM_USER + 127
%PSM_SETHEADERSUBTITLEW = %WM_USER + 128

#IF %DEF(%UNICODE)
%PSM_SETHEADERSUBTITLE  = %PSM_SETHEADERSUBTITLEW
#ELSE
%PSM_SETHEADERSUBTITLE  = %PSM_SETHEADERSUBTITLEA
#ENDIF

SUB PropSheet_SetHeaderSubTitle (BYVAL hDlg AS DWORD, BYVAL iindex AS LONG, lpszText AS ASCIIZ)
    SendMessage hDlg, %PSM_SETHEADERSUBTITLE, iindex, BYVAL VARPTR(lpszText)
END SUB

%PSM_HWNDTOINDEX = %WM_USER + 129

FUNCTION PropSheet_HwndToIndex (BYVAL hDlg AS DWORD, BYVAL hwnd AS DWORD) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_HWNDTOINDEX, hwnd, 0)
END FUNCTION

%PSM_INDEXTOHWND = %WM_USER + 130

FUNCTION PropSheet_IndexToHwnd (BYVAL hDlg AS DWORD, BYVAL i AS LONG) AS DWORD
    FUNCTION = SendMessage(hDlg, %PSM_INDEXTOHWND, i, 0)
END FUNCTION

%PSM_PAGETOINDEX = %WM_USER + 131

FUNCTION PropSheet_PageToIndex (BYVAL hDlg AS DWORD, BYVAL hpage AS DWORD) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_PAGETOINDEX, 0, hpage)
END FUNCTION

%PSM_INDEXTOPAGE = %WM_USER + 132

FUNCTION PropSheet_IndexToPage (BYVAL hDlg AS DWORD, BYVAL i AS LONG) AS DWORD
    FUNCTION = SendMessage(hDlg, %PSM_INDEXTOPAGE, i, 0)
END FUNCTION

%PSM_IDTOINDEX = %WM_USER + 133

FUNCTION PropSheet_IdToIndex (BYVAL hDlg AS DWORD, BYVAL iPageID AS LONG) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_IDTOINDEX, 0, iPageID)
END FUNCTION

%PSM_INDEXTOID = %WM_USER + 134

FUNCTION PropSheet_IndexToId (BYVAL hDlg AS DWORD, BYVAL i AS LONG) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_INDEXTOID, i, 0)
END FUNCTION

%PSM_GETRESULT = %WM_USER + 135

FUNCTION PropSheet_GetResult (BYVAL hDlg AS DWORD) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_GETRESULT, 0, 0)
END FUNCTION

%PSM_RECALCPAGESIZES = %WM_USER + 136

FUNCTION PropSheet_RecalcPageSizes (BYVAL hDlg AS DWORD) AS LONG
    FUNCTION = SendMessage(hDlg, %PSM_RECALCPAGESIZES, 0, 0)
END FUNCTION

#ENDIF ' &H0500


#IF %WIN32_WINNT >= &H0600
' Only UNICODE
' These messages are only for Aero Wizard style wizards. The Wizard author
' needs to specify the %PSH_AEROWIZARD flag in the dwFlags member of the
' PROPSHEETHEADER structure to get this behavior.

%PSM_SETNEXTTEXTW  = %WM_USER + 137
%PSM_SETNEXTTEXT   = %PSM_SETNEXTTEXTW

SUB PropSheet_SetNextText (BYVAL hDlg AS DWORD, lpszText AS ASCIIZ)
    SendMessage hDlg, %PSM_SETNEXTTEXT, 0, BYVAL VARPTR(lpszText)
END SUB

%PSWIZB_SHOW       = 0
%PSWIZB_RESTORE    = 1


%PSM_SHOWWIZBUTTONS   = %WM_USER + 138
SUB PropSheet_ShowWizButtons (BYVAL hDlg AS DWORD, BYVAL dwFlag AS DWORD, _
    BYVAL dwButton AS DWORD)
    PostMessage hDlg, %PSM_SHOWWIZBUTTONS, dwFlag, dwButton
END SUB


%PSM_ENABLEWIZBUTTONS = %WM_USER + 139
SUB PropSheet_EnableWizButtons (BYVAL hDlg AS DWORD, BYVAL dwState AS DWORD, _
    BYVAL dwMask AS DWORD)
    PostMessage hDlg, %PSM_ENABLEWIZBUTTONS, dwState, dwMask
END SUB


%PSM_SETBUTTONTEXTW     = %WM_USER + 140
%PSM_SETBUTTONTEXT      = %PSM_SETBUTTONTEXTW
SUB PropSheet_SetButtonText (BYVAL hDlg AS DWORD, BYVAL dwButton AS DWORD, _
    lpszText AS ASCIIZ)
    SendMessage hDlg, %PSM_SETBUTTONTEXT, dwButton, BYVAL VARPTR(lpszText)
END SUB

#ENDIF ' &H0600


%ID_PSRESTARTWINDOWS = 2
%ID_PSREBOOTSYSTEM   = %ID_PSRESTARTWINDOWS OR 1


%WIZ_CXDLG      = 276
%WIZ_CYDLG      = 140

%WIZ_CXBMP      = 80

%WIZ_BODYX      = 92
%WIZ_BODYCX     = 184

%PROP_SM_CXDLG  = 212
%PROP_SM_CYDLG  = 188

%PROP_MED_CXDLG = 227
%PROP_MED_CYDLG = 215

%PROP_LG_CXDLG  = 252
%PROP_LG_CYDLG  = 218


'#if %DEF(%ISOLATION_AWARE_ENABLED) AND %ISOLATION_AWARE_ENABLED
'#include "prsht.inl.inc"
'#endif ' ISOLATION_AWARE_ENABLED
